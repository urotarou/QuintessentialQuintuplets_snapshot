apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'deploygate'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "lab.uro.kitori.quintessentialquintuplets"
        minSdkVersion 24
        targetSdkVersion 28

        def major = 0
        def minor = 9
        def patch = 7
        def build = 0
        versionCode major * 1000000 + minor * 10000 + patch * 100 + build
        versionName "$major.$minor.$patch"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // properties
        buildConfigField "String", "TWITTER_AUTH", "\"${secret.twitter}\""
    }

    buildTypes {
        debug {
            debuggable = true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
            applicationIdSuffix ".dev"
        }
        stg {
            dimension "default"
            applicationIdSuffix ".stg"
        }
        pro {
            dimension "default"
        }
    }
    variantFilter { variant ->
        if (variant.buildType.name == "release" && variant.flavors*.name.contains("dev")) {
            setIgnore(true)
        }
        if (variant.buildType.name == "release" && variant.flavors*.name.contains("stg")) {
            setIgnore(true)
        }
        if (variant.buildType.name == "debug" && variant.flavors*.name.contains("pro")) {
            setIgnore(true)
        }
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        devDebug.java.srcDirs += 'src/devDebug/kotlin'
        stgDebug.java.srcDirs += 'src/stgDebug/kotlin'
        proRelease.java.srcDirs += 'src/proRelease/kotlin'

        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    testOptions.junitPlatform {
        filters {
            engines {
                include "spek2", "junit-vintage"
            }
        }
    }
}

dependencies {
    def coroutines_version = '1.1.1'
    def lifecycle_version = '2.0.0'
    def okhttp_version = '3.13.1'
    def retrofit_version = '2.5.1-SNAPSHOT'
    def moshi_version = '1.8.0'
    def dagger_version = '2.21'
    def stetho_version = '1.5.0'
    def spek_version = '2.0.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // AndroidX
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.paging:paging-runtime-ktx:2.1.0'
    implementation 'androidx.emoji:emoji-appcompat:1.0.0'
    implementation 'androidx.emoji:emoji-bundled:1.0.0'

    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Network
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Json
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // DateTime
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'

    // Image
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // DI
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Log
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Debug
    debugImplementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"
    debugImplementation "com.facebook.stetho:stetho:$stetho_version"

    // Test
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    testImplementation "io.mockk:mockk:1.9.2"

    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"

    testImplementation "org.robolectric:robolectric:4.2"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.4.0'

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
